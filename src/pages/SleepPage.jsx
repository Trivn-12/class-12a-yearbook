import { useState, useEffect } from 'react'
import { useNavigate } from 'react-router-dom'

function SleepPage() {
  const [isWakingUp, setIsWakingUp] = useState(false)
  const [currentQuote, setCurrentQuote] = useState('')
  const [quoteVisible, setQuoteVisible] = useState(true)
  const navigate = useNavigate()

  // Danh s√°ch c√°c c√¢u k·ª∑ ni·ªám thanh xu√¢n
  const youthQuotes = [
    "Tu·ªïi h·ªçc tr√≤ l√† nh·ªØng trang s√°ch ƒë·∫πp nh·∫•t trong cu·ªën nh·∫≠t k√Ω cu·ªôc ƒë·ªùi.",
    "Nh·ªØng gi·∫•c m∆° tu·ªïi 17 lu√¥n trong tr·∫ªo v√† ƒë·∫ßy hy v·ªçng.",
    "Th·ªùi gian c·∫•p 3 l√† khi ch√∫ng ta tin r·∫±ng m√¨nh c√≥ th·ªÉ chinh ph·ª•c c·∫£ th·∫ø gi·ªõi.",
    "Nh·ªØng bu·ªïi chi·ªÅu tan h·ªçc, √°o tr·∫Øng bay trong gi√≥, l√† k√Ω ·ª©c ƒë·∫πp nh·∫•t.",
    "Tu·ªïi tr·∫ª l√† khi ta d√°m m∆° nh·ªØng gi·∫•c m∆° l·ªõn nh·∫•t.",
    "L·ªõp 12A - n∆°i nh·ªØng t√¨nh b·∫°n ƒë·∫πp nh·∫•t ƒë∆∞·ª£c vi·∫øt n√™n.",
    "Nh·ªØng gi·ªù h·ªçc cu·ªëi c√πng, nh·ªØng k·ª∑ ni·ªám kh√¥ng bao gi·ªù phai m·ªù.",
    "Tu·ªïi h·ªçc sinh l√† khi ta tin v√†o ph√©p m√†u c·ªßa nh·ªØng ∆∞·ªõc m∆°.",
    "Thanh xu√¢n l√† nh·ªØng ng√†y ta c∆∞·ªùi nhi·ªÅu h∆°n kh√≥c.",
    "Th·ªùi gian c·∫•p 3 ng·∫Øn ng·ªßi nh∆∞ng ƒë·ªÉ l·∫°i d·∫•u ·∫•n c·∫£ ƒë·ªùi.",
    "Nh·ªØng bu·ªïi s√°ng ƒë·∫øn tr∆∞·ªùng v·ªõi n·ª• c∆∞·ªùi t∆∞∆°i nh·∫•t.",
    "Tu·ªïi 17 - khi m·ªçi th·ª© ƒë·ªÅu c√≥ th·ªÉ v√† kh√¥ng g√¨ l√† kh√¥ng th·ªÉ.",
    "L·ªõp h·ªçc l√† n∆°i ta h·ªçc c√°ch y√™u th∆∞∆°ng v√† chia s·∫ª.",
    "Nh·ªØng gi·∫•c ng·ªß tr∆∞a ng·ªçt ng√†o nh·∫•t c·ªßa tu·ªïi h·ªçc tr√≤.",
    "Thanh xu√¢n l√† khi ta d√°m tin v√†o t√¨nh b·∫°n vƒ©nh c·ª≠u.",
    "Th·ªùi gian c·∫•p 3 - khi ta vi·∫øt nh·ªØng c√¢u th∆° ƒë·∫ßu ƒë·ªùi.",
    "Tu·ªïi h·ªçc sinh l√† khi ta tin r·∫±ng t√¨nh y√™u s·∫Ω m√£i m√£i.",
    "Nh·ªØng bu·ªïi chi·ªÅu h·ªçc b√†i c√πng b·∫°n b√® th√¢n thi·∫øt.",
    "L·ªõp 12A - n∆°i nh·ªØng k√Ω ·ª©c ƒë·∫πp nh·∫•t ƒë∆∞·ª£c l∆∞u gi·ªØ.",
    "Tu·ªïi tr·∫ª l√† khi ta d√°m ∆∞·ªõc m∆° v·ªÅ m·ªôt t∆∞∆°ng lai r·ª±c r·ª°.",
    "Ba nƒÉm c·∫•p 3 nh∆∞ m·ªôt cu·ªën phim ƒë·∫πp, m·ªói khung h√¨nh ƒë·ªÅu ƒë√°ng nh·ªõ.",
    "Nh·ªØng ti·∫øng c∆∞·ªùi trong gi·ªù ra ch∆°i vang m√£i trong tim.",
    "Tu·ªïi h·ªçc tr√≤ - khi ta tin r·∫±ng m√¨nh s·∫Ω thay ƒë·ªïi th·∫ø gi·ªõi.",
    "Nh·ªØng bu·ªïi t·ªëi l√†m b√†i t·∫≠p c√πng nhau qua ƒëi·ªán tho·∫°i.",
    "L·ªõp 12A - n∆°i nh·ªØng c√¢u chuy·ªán ƒë·∫πp nh·∫•t b·∫Øt ƒë·∫ßu."
  ]

  // Ch·ªçn c√¢u ng·∫´u nhi√™n khi component mount v√† m·ªói 5 gi√¢y
  useEffect(() => {
    const getRandomQuote = () => {
      const randomIndex = Math.floor(Math.random() * youthQuotes.length)
      return youthQuotes[randomIndex]
    }

    // Ch·ªçn c√¢u ƒë·∫ßu ti√™n
    setCurrentQuote(getRandomQuote())

    // Thay ƒë·ªïi c√¢u m·ªói 5 gi√¢y v·ªõi hi·ªáu ·ª©ng fade
    const interval = setInterval(() => {
      setQuoteVisible(false) // Fade out

      setTimeout(() => {
        setCurrentQuote(getRandomQuote()) // ƒê·ªïi c√¢u
        setQuoteVisible(true) // Fade in
      }, 500) // ƒê·ª£i 0.5s ƒë·ªÉ fade out ho√†n th√†nh
    }, 5000)

    return () => clearInterval(interval)
  }, [])

  const handleWakeUp = () => {
    setIsWakingUp(true)
    
    // Sau 2 gi√¢y s·∫Ω chuy·ªÉn ƒë·∫øn trang ch·ªù duy·ªát
    setTimeout(() => {
      navigate('/pending')
    }, 2000)
  }

  return (
    <div className="min-h-screen bg-gradient-1 transition-all duration-500 relative overflow-hidden">
      {/* Animated Background Elements */}
      <div className="absolute inset-0 overflow-hidden pointer-events-none">
        <div className="absolute top-20 left-10 w-32 h-32 bg-white/5 rounded-full blur-xl animate-pulse"></div>
        <div className="absolute top-40 right-20 w-24 h-24 bg-white/10 rounded-full blur-lg animate-bounce"></div>
        <div className="absolute bottom-32 left-1/4 w-40 h-40 bg-white/5 rounded-full blur-2xl animate-pulse delay-1000"></div>
        
        {/* Floating elements for youth memories */}
        <div className="absolute top-1/4 left-1/3 text-white/20 text-5xl animate-bounce delay-500">üå∏</div>
        <div className="absolute top-1/3 right-1/4 text-white/15 text-4xl animate-bounce delay-1000">üìö</div>
        <div className="absolute bottom-1/3 left-1/5 text-white/10 text-5xl animate-bounce delay-1500">üéì</div>
        <div className="absolute top-1/2 right-1/5 text-white/15 text-3xl animate-bounce delay-2000">üí≠</div>
      </div>

      <div className="container mx-auto px-4 py-8 relative z-10 flex items-center justify-center min-h-screen">
        <div className="max-w-2xl mx-auto text-center">
          
          {/* Main Content */}
          <div className="glass rounded-3xl p-8 md:p-12 shadow-2xl neon-hover fade-in">
            
            {/* Sleep Icon - Removed */}

            {/* Main Message */}
            <h1 className="text-3xl md:text-4xl lg:text-5xl font-bold text-white mb-6 leading-relaxed">
              <span className="neon-pulse">Thanh xu√¢n d∆∞·ªõi m√°i tr∆∞·ªùng</span>
              <br />
              <span className="text-purple-300">nh∆∞ gi·∫•c ng·ªß tr∆∞a th·∫≠t th√∫ v·ªã</span>
            </h1>

            {/* Subtitle */}
            <p className="text-white/80 text-lg md:text-xl mb-8 leading-relaxed">
              Ba nƒÉm c·∫•p 3 tr√¥i qua nh∆∞ m·ªôt gi·∫•c m∆° ƒë·∫πp, ng·ªçt ng√†o v√† ƒë√°ng nh·ªõ...
            </p>

            {/* Decorative Line */}
            <div className="w-32 h-1 bg-gradient-to-r from-purple-500 to-pink-500 mx-auto rounded-full neon-pulse mb-8"></div>

            {/* Wake Up Button */}
            {!isWakingUp ? (
              <button
                onClick={handleWakeUp}
                className="group relative px-12 py-6 neon-button text-white font-bold text-xl rounded-3xl transition-all duration-300 transform hover:scale-105 shadow-2xl overflow-hidden"
                style={{ 
                  background: '#8b5cf6',
                  boxShadow: '0 0 30px rgba(139, 92, 246, 0.6)'
                }}
              >
                <span className="relative z-10 flex items-center justify-center">
                  <span className="font-bold tracking-wide">Ti·∫øp t·ª•c</span>
                </span>
                <div className="absolute inset-0 bg-gradient-to-r from-purple-400/20 to-pink-400/20 rounded-3xl blur opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
              </button>
            ) : (
              <div className="flex justify-center">
                <div className="w-12 h-12 border-4 border-white border-t-transparent rounded-full animate-spin"></div>
              </div>
            )}

            {/* Memories */}
            <div className="mt-12 glass rounded-2xl p-6 border border-purple-500/30">
              <h3 className="text-white font-bold text-lg mb-4 flex items-center justify-center gap-2">
                <div className="w-2 h-2 bg-cyan-500 rounded-full neon-pulse"></div>
                K·ª∑ ni·ªám thanh xu√¢n
                <div className="w-2 h-2 bg-cyan-500 rounded-full neon-pulse"></div>
              </h3>
              <div className="relative min-h-[80px] flex items-center justify-center">
                <p className={`text-cyan-200 text-base leading-relaxed text-center italic transition-all duration-500 ease-in-out transform ${
                  quoteVisible ? 'opacity-100 translate-y-0' : 'opacity-0 translate-y-2'
                }`}>
                  "{currentQuote}"
                </p>
              </div>
            </div>

          </div>
        </div>
      </div>
    </div>
  )
}

export default SleepPage
